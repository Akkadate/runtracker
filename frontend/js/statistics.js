// js/statistics.js
// ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö
document.addEventListener('DOMContentLoaded', () => {
    // LIFF„ÅåÂàùÊúüÂåñ„Åï„Çå„Çã„ÅÆ„ÇíÂæÖ„Å§
    if (liff.isInClient() && liff.isLoggedIn()) {
        initializeStatisticsPage();
    } else {
        // ÂÆöÊúüÁöÑ„Å´„ÉÅ„Çß„ÉÉ„ÇØ
        const checkLiffInterval = setInterval(() => {
            if (liff.isInClient() && liff.isLoggedIn()) {
                clearInterval(checkLiffInterval);
                initializeStatisticsPage();
            }
        }, 500);
    }
});

let userStats = null;
let rankingData = null;

async function initializeStatisticsPage() {
    try {
        // „É¶„Éº„Ç∂„Éº„Éó„É≠„Éï„Ç°„Ç§„É´„ÅÆÂèñÂæó
        const profile = await liff.getProfile();
        
        // LINE UserID„Çí‰ΩøÁî®„Åó„Å¶„É¶„Éº„Ç∂„ÉºÊÉÖÂ†±„ÇíÂèñÂæó
        const userData = await apiRequest('/api/users/' + profile.userId);
        
        if (!userData) {
            // „É¶„Éº„Ç∂„Éº„Éá„Éº„Çø„ÅåÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥Âêà„ÅØ„ÄÅ„É≠„Ç∞„Ç§„É≥Ë¶ÅÊ±Ç„É°„ÉÉ„Çª„Éº„Ç∏„ÇíË°®Á§∫
            document.getElementById('loginRequired').classList.remove('hidden');
            document.getElementById('statsContainer').classList.add('hidden');
            return;
        }
        
        // „É¶„Éº„Ç∂„Éº„Åå„É≠„Ç∞„Ç§„É≥Ê∏à„Åø„ÅÆÂ†¥Âêà„ÄÅÁµ±Ë®à„ÇíË°®Á§∫
        document.getElementById('loginRequired').classList.add('hidden');
        document.getElementById('statsContainer').classList.remove('hidden');
        
        // „É¶„Éº„Ç∂„Éº„ÅÆËµ∞Ë°å„Éá„Éº„Çø„ÇíÂèñÂæó
        await loadUserStats(profile.userId);
        
        // „É©„É≥„Ç≠„É≥„Ç∞„Éá„Éº„Çø„ÇíÂèñÂæó
        await loadRankingData();
        
        // „Ç∞„É©„Éï„ÇíÊèèÁîª
        renderProgressChart();
        
        // ÂÖ±Êúâ„Éú„Çø„É≥„ÅÆ„Ç§„Éô„É≥„Éà„É™„Çπ„Éä„Éº„ÇíË®≠ÂÆö
        document.getElementById('shareStatsButton').addEventListener('click', shareStats);
    } catch (error) {
        console.error('Error initializing statistics page:', error);
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    }
}

async function loadUserStats(userId) {
    try {
        userStats = await apiRequest('/api/runs/stats/' + userId);
        
        // Áµ±Ë®à„Éá„Éº„Çø„ÇíË°®Á§∫
        document.getElementById('totaldistance').textContent = userStats.totaldistance.toFixed(2);
        document.getElementById('totalruns').textContent = userStats.totalruns;
        
        // „É¶„Éº„Ç∂„Éº„ÅÆÁèæÂú®„ÅÆ„É©„É≥„ÇØ„ÇíÁâπÂÆö
        if (rankingData) {
            const userRank = rankingData.findIndex(item => item.userId === userId) + 1;
            document.getElementById('currentRank').textContent = userRank > 0 ? userRank : '-';
        }
    } catch (error) {
        console.error('Error loading user stats:', error);
        throw error;
    }
}

async function loadRankingData() {
    try {
        rankingData = await apiRequest('/api/runs/ranking');
        
        // „É©„É≥„Ç≠„É≥„Ç∞„ÉÜ„Éº„Éñ„É´„ÇíÁîüÊàê
        const tableBody = document.getElementById('rankingTableBody');
        tableBody.innerHTML = '';
        
        rankingData.forEach((runner, index) => {
            const row = document.createElement('tr');
            
            // „É¶„Éº„Ç∂„ÉºËá™Ë∫´„ÅÆË°å„Çí„Éè„Ç§„É©„Ç§„Éà
            if (runner.userId === liff.getContext().userId) {
                row.classList.add('highlight');
            }
            
            row.innerHTML = `
                <td>${index + 1}</td>
                <td>${runner.displayname}</td>
                <td>${runner.totaldistance.toFixed(2)}</td>
            `;
            
            tableBody.appendChild(row);
        });
        
        // „É¶„Éº„Ç∂„Éº„ÅÆÁèæÂú®„ÅÆ„É©„É≥„ÇØ„ÇíÊõ¥Êñ∞
        if (userStats) {
            const userRank = rankingData.findIndex(item => item.userId === liff.getContext().userId) + 1;
            document.getElementById('currentRank').textContent = userRank > 0 ? userRank : '-';
        }
    } catch (error) {
        console.error('Error loading ranking data:', error);
        throw error;
    }
}

function renderProgressChart() {
    if (!userStats || !userStats.progressData || userStats.progressData.length === 0) {
        return;
    }
    
    const ctx = document.getElementById('progressChart').getContext('2d');
    
    // Ëµ∞Ë°å„Éá„Éº„Çø„ÇíÊó•‰ªò„Åß„ÇΩ„Éº„Éà
    const sortedData = [...userStats.progressData].sort((a, b) => new Date(a.runDate) - new Date(b.runDate));
    
    // Á¥ØÁ©çË∑ùÈõ¢„ÇíË®àÁÆó
    let cumulativeDistance = 0;
    const chartData = sortedData.map(run => {
        cumulativeDistance += parseFloat(run.distance);
        return {
            x: new Date(run.rundate),
            y: cumulativeDistance
        };
    });
    
    // „ÉÅ„É£„Éº„Éà„ÅÆË®≠ÂÆö
    new Chart(ctx, {
        type: 'line',
        data: {
            datasets: [{
                label: '‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏™‡∏∞‡∏™‡∏° (‡∏Å‡∏°.)',
                data: chartData,
                borderColor: '#06c755',
                backgroundColor: 'rgba(6, 199, 85, 0.1)',
                fill: true,
                tension: 0.4
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                x: {
                    type: 'time',
                    time: {
                        unit: 'day',
                        displayFormats: {
                            day: 'DD MMM'
                        }
                    },
                    title: {
                        display: true,
                        text: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: '‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏™‡∏∞‡∏™‡∏° (‡∏Å‡∏°.)'
                    },
                    min: 0
                }
            },
            plugins: {
                tooltip: {
                    callbacks: {
                        title: function(tooltipItems) {
                            const date = new Date(tooltipItems[0].parsed.x);
                            return date.toLocaleDateString('th-TH', {
                                year: 'numeric',
                                month: 'long',
                                day: 'numeric'
                            });
                        }
                    }
                }
            }
        }
    });
}

// Áµ±Ë®à„ÇíÂÖ±Êúâ„Åô„ÇãÈñ¢Êï∞
function shareStats() {
    if (!userStats) return;
    
    const message = `üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô\nüèÅ ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏£‡∏ß‡∏°: ${userStats.totaldistance.toFixed(2)} ‡∏Å‡∏°.\nüèÉ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á: ${userstats.totalruns} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á\nüèÜ ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${document.getElementById('currentRank').textContent}`;
    
    // LINE„Åß„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂÖ±Êúâ
    if (liff.isApiAvailable('shareTargetPicker')) {
        liff.shareTargetPicker([
            {
                type: "text",
                text: message
            }
        ])
        .then(function(res) {
            if (res) {
                // ÂÖ±ÊúâÊàêÂäü
                alert('‡πÅ‡∏ä‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
            } else {
                // „Ç≠„É£„É≥„Çª„É´„Åæ„Åü„ÅØÂ§±Êïó
                console.log('ShareTargetPicker was cancelled by user or failed');
            }
        })
        .catch(function(error) {
            console.error('ShareTargetPicker failed', error);
        });
    } else {
        // ShareTargetPicker„ÅåÂà©Áî®„Åß„Åç„Å™„ÅÑÂ†¥Âêà
        sendLineMessage(message);
        alert('‡πÅ‡∏ä‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
    }
}